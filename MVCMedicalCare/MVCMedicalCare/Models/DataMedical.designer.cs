#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCMedicalCare.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_EndTotal")]
	public partial class DataMedicalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPolicyRequestDetail(PolicyRequestDetail instance);
    partial void UpdatePolicyRequestDetail(PolicyRequestDetail instance);
    partial void DeletePolicyRequestDetail(PolicyRequestDetail instance);
    partial void InsertPolicyApprovalDetail(PolicyApprovalDetail instance);
    partial void UpdatePolicyApprovalDetail(PolicyApprovalDetail instance);
    partial void DeletePolicyApprovalDetail(PolicyApprovalDetail instance);
    partial void Insertpoliciesonemployee(policiesonemployee instance);
    partial void Updatepoliciesonemployee(policiesonemployee instance);
    partial void Deletepoliciesonemployee(policiesonemployee instance);
    partial void InsertEmpRegister(EmpRegister instance);
    partial void UpdateEmpRegister(EmpRegister instance);
    partial void DeleteEmpRegister(EmpRegister instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertCompanyDetail(CompanyDetail instance);
    partial void UpdateCompanyDetail(CompanyDetail instance);
    partial void DeleteCompanyDetail(CompanyDetail instance);
    partial void Insertpolicy(policy instance);
    partial void Updatepolicy(policy instance);
    partial void Deletepolicy(policy instance);
    #endregion
		
		public DataMedicalDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DB_EndTotalConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataMedicalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataMedicalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataMedicalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataMedicalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PolicyRequestDetail> PolicyRequestDetails
		{
			get
			{
				return this.GetTable<PolicyRequestDetail>();
			}
		}
		
		public System.Data.Linq.Table<PolicyApprovalDetail> PolicyApprovalDetails
		{
			get
			{
				return this.GetTable<PolicyApprovalDetail>();
			}
		}
		
		public System.Data.Linq.Table<policiesonemployee> policiesonemployees
		{
			get
			{
				return this.GetTable<policiesonemployee>();
			}
		}
		
		public System.Data.Linq.Table<EmpRegister> EmpRegisters
		{
			get
			{
				return this.GetTable<EmpRegister>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<CompanyDetail> CompanyDetails
		{
			get
			{
				return this.GetTable<CompanyDetail>();
			}
		}
		
		public System.Data.Linq.Table<policy> policies
		{
			get
			{
				return this.GetTable<policy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PolicyRequestDetail")]
	public partial class PolicyRequestDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequestId;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private System.Nullable<int> _empno;
		
		private System.Nullable<int> _PolycyId;
		
		private string _Status;
		
		private EntitySet<PolicyApprovalDetail> _PolicyApprovalDetails;
		
		private EntityRef<EmpRegister> _EmpRegister;
		
		private EntityRef<policy> _policy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIdChanging(int value);
    partial void OnRequestIdChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    partial void OnempnoChanging(System.Nullable<int> value);
    partial void OnempnoChanged();
    partial void OnPolycyIdChanging(System.Nullable<int> value);
    partial void OnPolycyIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public PolicyRequestDetail()
		{
			this._PolicyApprovalDetails = new EntitySet<PolicyApprovalDetail>(new Action<PolicyApprovalDetail>(this.attach_PolicyApprovalDetails), new Action<PolicyApprovalDetail>(this.detach_PolicyApprovalDetails));
			this._EmpRegister = default(EntityRef<EmpRegister>);
			this._policy = default(EntityRef<policy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empno", DbType="Int")]
		public System.Nullable<int> empno
		{
			get
			{
				return this._empno;
			}
			set
			{
				if ((this._empno != value))
				{
					if (this._EmpRegister.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempnoChanging(value);
					this.SendPropertyChanging();
					this._empno = value;
					this.SendPropertyChanged("empno");
					this.OnempnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolycyId", DbType="Int")]
		public System.Nullable<int> PolycyId
		{
			get
			{
				return this._PolycyId;
			}
			set
			{
				if ((this._PolycyId != value))
				{
					if (this._policy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPolycyIdChanging(value);
					this.SendPropertyChanging();
					this._PolycyId = value;
					this.SendPropertyChanged("PolycyId");
					this.OnPolycyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PolicyRequestDetail_PolicyApprovalDetail", Storage="_PolicyApprovalDetails", ThisKey="RequestId", OtherKey="RequestId")]
		public EntitySet<PolicyApprovalDetail> PolicyApprovalDetails
		{
			get
			{
				return this._PolicyApprovalDetails;
			}
			set
			{
				this._PolicyApprovalDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpRegister_PolicyRequestDetail", Storage="_EmpRegister", ThisKey="empno", OtherKey="empno", IsForeignKey=true)]
		public EmpRegister EmpRegister
		{
			get
			{
				return this._EmpRegister.Entity;
			}
			set
			{
				EmpRegister previousValue = this._EmpRegister.Entity;
				if (((previousValue != value) 
							|| (this._EmpRegister.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmpRegister.Entity = null;
						previousValue.PolicyRequestDetails.Remove(this);
					}
					this._EmpRegister.Entity = value;
					if ((value != null))
					{
						value.PolicyRequestDetails.Add(this);
						this._empno = value.empno;
					}
					else
					{
						this._empno = default(Nullable<int>);
					}
					this.SendPropertyChanged("EmpRegister");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="policy_PolicyRequestDetail", Storage="_policy", ThisKey="PolycyId", OtherKey="policyid", IsForeignKey=true)]
		public policy policy
		{
			get
			{
				return this._policy.Entity;
			}
			set
			{
				policy previousValue = this._policy.Entity;
				if (((previousValue != value) 
							|| (this._policy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._policy.Entity = null;
						previousValue.PolicyRequestDetails.Remove(this);
					}
					this._policy.Entity = value;
					if ((value != null))
					{
						value.PolicyRequestDetails.Add(this);
						this._PolycyId = value.policyid;
					}
					else
					{
						this._PolycyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("policy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PolicyApprovalDetails(PolicyApprovalDetail entity)
		{
			this.SendPropertyChanging();
			entity.PolicyRequestDetail = this;
		}
		
		private void detach_PolicyApprovalDetails(PolicyApprovalDetail entity)
		{
			this.SendPropertyChanging();
			entity.PolicyRequestDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PolicyApprovalDetails")]
	public partial class PolicyApprovalDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PolicyApprovalId;
		
		private System.Nullable<int> _RequestId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Status;
		
		private string _Reason;
		
		private EntityRef<PolicyRequestDetail> _PolicyRequestDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPolicyApprovalIdChanging(int value);
    partial void OnPolicyApprovalIdChanged();
    partial void OnRequestIdChanging(System.Nullable<int> value);
    partial void OnRequestIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    #endregion
		
		public PolicyApprovalDetail()
		{
			this._PolicyRequestDetail = default(EntityRef<PolicyRequestDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyApprovalId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PolicyApprovalId
		{
			get
			{
				return this._PolicyApprovalId;
			}
			set
			{
				if ((this._PolicyApprovalId != value))
				{
					this.OnPolicyApprovalIdChanging(value);
					this.SendPropertyChanging();
					this._PolicyApprovalId = value;
					this.SendPropertyChanged("PolicyApprovalId");
					this.OnPolicyApprovalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="Int")]
		public System.Nullable<int> RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					if (this._PolicyRequestDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(3)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="VarChar(50)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PolicyRequestDetail_PolicyApprovalDetail", Storage="_PolicyRequestDetail", ThisKey="RequestId", OtherKey="RequestId", IsForeignKey=true)]
		public PolicyRequestDetail PolicyRequestDetail
		{
			get
			{
				return this._PolicyRequestDetail.Entity;
			}
			set
			{
				PolicyRequestDetail previousValue = this._PolicyRequestDetail.Entity;
				if (((previousValue != value) 
							|| (this._PolicyRequestDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PolicyRequestDetail.Entity = null;
						previousValue.PolicyApprovalDetails.Remove(this);
					}
					this._PolicyRequestDetail.Entity = value;
					if ((value != null))
					{
						value.PolicyApprovalDetails.Add(this);
						this._RequestId = value.RequestId;
					}
					else
					{
						this._RequestId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PolicyRequestDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.policiesonemployees")]
	public partial class policiesonemployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _empno;
		
		private System.Nullable<int> _policyid;
		
		private string _policyname;
		
		private System.Nullable<decimal> _policyamount;
		
		private System.Nullable<decimal> _policyduration;
		
		private System.Nullable<decimal> _emi;
		
		private System.Nullable<System.DateTime> _pstartdate;
		
		private System.Nullable<System.DateTime> _penddate;
		
		private EntityRef<policy> _policy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempnoChanging(string value);
    partial void OnempnoChanged();
    partial void OnpolicyidChanging(System.Nullable<int> value);
    partial void OnpolicyidChanged();
    partial void OnpolicynameChanging(string value);
    partial void OnpolicynameChanged();
    partial void OnpolicyamountChanging(System.Nullable<decimal> value);
    partial void OnpolicyamountChanged();
    partial void OnpolicydurationChanging(System.Nullable<decimal> value);
    partial void OnpolicydurationChanged();
    partial void OnemiChanging(System.Nullable<decimal> value);
    partial void OnemiChanged();
    partial void OnpstartdateChanging(System.Nullable<System.DateTime> value);
    partial void OnpstartdateChanged();
    partial void OnpenddateChanging(System.Nullable<System.DateTime> value);
    partial void OnpenddateChanged();
    #endregion
		
		public policiesonemployee()
		{
			this._policy = default(EntityRef<policy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empno", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string empno
		{
			get
			{
				return this._empno;
			}
			set
			{
				if ((this._empno != value))
				{
					this.OnempnoChanging(value);
					this.SendPropertyChanging();
					this._empno = value;
					this.SendPropertyChanged("empno");
					this.OnempnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_policyid", DbType="Int")]
		public System.Nullable<int> policyid
		{
			get
			{
				return this._policyid;
			}
			set
			{
				if ((this._policyid != value))
				{
					if (this._policy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpolicyidChanging(value);
					this.SendPropertyChanging();
					this._policyid = value;
					this.SendPropertyChanged("policyid");
					this.OnpolicyidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_policyname", DbType="VarChar(50)")]
		public string policyname
		{
			get
			{
				return this._policyname;
			}
			set
			{
				if ((this._policyname != value))
				{
					this.OnpolicynameChanging(value);
					this.SendPropertyChanging();
					this._policyname = value;
					this.SendPropertyChanged("policyname");
					this.OnpolicynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_policyamount", DbType="Money")]
		public System.Nullable<decimal> policyamount
		{
			get
			{
				return this._policyamount;
			}
			set
			{
				if ((this._policyamount != value))
				{
					this.OnpolicyamountChanging(value);
					this.SendPropertyChanging();
					this._policyamount = value;
					this.SendPropertyChanged("policyamount");
					this.OnpolicyamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_policyduration", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> policyduration
		{
			get
			{
				return this._policyduration;
			}
			set
			{
				if ((this._policyduration != value))
				{
					this.OnpolicydurationChanging(value);
					this.SendPropertyChanging();
					this._policyduration = value;
					this.SendPropertyChanged("policyduration");
					this.OnpolicydurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emi", DbType="Money")]
		public System.Nullable<decimal> emi
		{
			get
			{
				return this._emi;
			}
			set
			{
				if ((this._emi != value))
				{
					this.OnemiChanging(value);
					this.SendPropertyChanging();
					this._emi = value;
					this.SendPropertyChanged("emi");
					this.OnemiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pstartdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> pstartdate
		{
			get
			{
				return this._pstartdate;
			}
			set
			{
				if ((this._pstartdate != value))
				{
					this.OnpstartdateChanging(value);
					this.SendPropertyChanging();
					this._pstartdate = value;
					this.SendPropertyChanged("pstartdate");
					this.OnpstartdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_penddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> penddate
		{
			get
			{
				return this._penddate;
			}
			set
			{
				if ((this._penddate != value))
				{
					this.OnpenddateChanging(value);
					this.SendPropertyChanging();
					this._penddate = value;
					this.SendPropertyChanged("penddate");
					this.OnpenddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="policy_policiesonemployee", Storage="_policy", ThisKey="policyid", OtherKey="policyid", IsForeignKey=true)]
		public policy policy
		{
			get
			{
				return this._policy.Entity;
			}
			set
			{
				policy previousValue = this._policy.Entity;
				if (((previousValue != value) 
							|| (this._policy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._policy.Entity = null;
						previousValue.policiesonemployees.Remove(this);
					}
					this._policy.Entity = value;
					if ((value != null))
					{
						value.policiesonemployees.Add(this);
						this._policyid = value.policyid;
					}
					else
					{
						this._policyid = default(Nullable<int>);
					}
					this.SendPropertyChanged("policy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmpRegister")]
	public partial class EmpRegister : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empno;
		
		private string _designation;
		
		private System.Nullable<System.DateTime> _joindate;
		
		private System.Nullable<decimal> _salary;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _address;
		
		private string _contactno;
		
		private string _state;
		
		private string _country;
		
		private string _city;
		
		private string _policystatus;
		
		private System.Nullable<int> _policyid;
		
		private EntitySet<PolicyRequestDetail> _PolicyRequestDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempnoChanging(int value);
    partial void OnempnoChanged();
    partial void OndesignationChanging(string value);
    partial void OndesignationChanged();
    partial void OnjoindateChanging(System.Nullable<System.DateTime> value);
    partial void OnjoindateChanged();
    partial void OnsalaryChanging(System.Nullable<decimal> value);
    partial void OnsalaryChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncontactnoChanging(string value);
    partial void OncontactnoChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpolicystatusChanging(string value);
    partial void OnpolicystatusChanged();
    partial void OnpolicyidChanging(System.Nullable<int> value);
    partial void OnpolicyidChanged();
    #endregion
		
		public EmpRegister()
		{
			this._PolicyRequestDetails = new EntitySet<PolicyRequestDetail>(new Action<PolicyRequestDetail>(this.attach_PolicyRequestDetails), new Action<PolicyRequestDetail>(this.detach_PolicyRequestDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empno", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empno
		{
			get
			{
				return this._empno;
			}
			set
			{
				if ((this._empno != value))
				{
					this.OnempnoChanging(value);
					this.SendPropertyChanging();
					this._empno = value;
					this.SendPropertyChanged("empno");
					this.OnempnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designation", DbType="VarChar(50)")]
		public string designation
		{
			get
			{
				return this._designation;
			}
			set
			{
				if ((this._designation != value))
				{
					this.OndesignationChanging(value);
					this.SendPropertyChanging();
					this._designation = value;
					this.SendPropertyChanged("designation");
					this.OndesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_joindate", DbType="DateTime")]
		public System.Nullable<System.DateTime> joindate
		{
			get
			{
				return this._joindate;
			}
			set
			{
				if ((this._joindate != value))
				{
					this.OnjoindateChanging(value);
					this.SendPropertyChanging();
					this._joindate = value;
					this.SendPropertyChanged("joindate");
					this.OnjoindateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="Money")]
		public System.Nullable<decimal> salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(50)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(150)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactno", DbType="VarChar(50)")]
		public string contactno
		{
			get
			{
				return this._contactno;
			}
			set
			{
				if ((this._contactno != value))
				{
					this.OncontactnoChanging(value);
					this.SendPropertyChanging();
					this._contactno = value;
					this.SendPropertyChanged("contactno");
					this.OncontactnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(50)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(50)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_policystatus", DbType="VarChar(30)")]
		public string policystatus
		{
			get
			{
				return this._policystatus;
			}
			set
			{
				if ((this._policystatus != value))
				{
					this.OnpolicystatusChanging(value);
					this.SendPropertyChanging();
					this._policystatus = value;
					this.SendPropertyChanged("policystatus");
					this.OnpolicystatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_policyid", DbType="Int")]
		public System.Nullable<int> policyid
		{
			get
			{
				return this._policyid;
			}
			set
			{
				if ((this._policyid != value))
				{
					this.OnpolicyidChanging(value);
					this.SendPropertyChanging();
					this._policyid = value;
					this.SendPropertyChanged("policyid");
					this.OnpolicyidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpRegister_PolicyRequestDetail", Storage="_PolicyRequestDetails", ThisKey="empno", OtherKey="empno")]
		public EntitySet<PolicyRequestDetail> PolicyRequestDetails
		{
			get
			{
				return this._PolicyRequestDetails;
			}
			set
			{
				this._PolicyRequestDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PolicyRequestDetails(PolicyRequestDetail entity)
		{
			this.SendPropertyChanging();
			entity.EmpRegister = this;
		}
		
		private void detach_PolicyRequestDetails(PolicyRequestDetail entity)
		{
			this.SendPropertyChanging();
			entity.EmpRegister = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccId;
		
		private string _empno;
		
		private string _Password;
		
		private string _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccIdChanging(int value);
    partial void OnAccIdChanged();
    partial void OnempnoChanging(string value);
    partial void OnempnoChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccId
		{
			get
			{
				return this._AccId;
			}
			set
			{
				if ((this._AccId != value))
				{
					this.OnAccIdChanging(value);
					this.SendPropertyChanging();
					this._AccId = value;
					this.SendPropertyChanged("AccId");
					this.OnAccIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empno", DbType="VarChar(20)")]
		public string empno
		{
			get
			{
				return this._empno;
			}
			set
			{
				if ((this._empno != value))
				{
					this.OnempnoChanging(value);
					this.SendPropertyChanging();
					this._empno = value;
					this.SendPropertyChanged("empno");
					this.OnempnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(4)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyDetails")]
	public partial class CompanyDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyId;
		
		private string _CompanyName;
		
		private string _Address;
		
		private string _Phone;
		
		private string _CompanyURL;
		
		private EntitySet<policy> _policies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCompanyURLChanging(string value);
    partial void OnCompanyURLChanged();
    #endregion
		
		public CompanyDetail()
		{
			this._policies = new EntitySet<policy>(new Action<policy>(this.attach_policies), new Action<policy>(this.detach_policies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyURL", DbType="VarChar(50)")]
		public string CompanyURL
		{
			get
			{
				return this._CompanyURL;
			}
			set
			{
				if ((this._CompanyURL != value))
				{
					this.OnCompanyURLChanging(value);
					this.SendPropertyChanging();
					this._CompanyURL = value;
					this.SendPropertyChanged("CompanyURL");
					this.OnCompanyURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyDetail_policy", Storage="_policies", ThisKey="CompanyId", OtherKey="companyId")]
		public EntitySet<policy> policies
		{
			get
			{
				return this._policies;
			}
			set
			{
				this._policies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_policies(policy entity)
		{
			this.SendPropertyChanging();
			entity.CompanyDetail = this;
		}
		
		private void detach_policies(policy entity)
		{
			this.SendPropertyChanging();
			entity.CompanyDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.policies")]
	public partial class policy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _policyid;
		
		private string _policyname;
		
		private string _policydes;
		
		private System.Nullable<decimal> _amount;
		
		private System.Nullable<decimal> _Emi;
		
		private System.Nullable<int> _companyId;
		
		private EntitySet<PolicyRequestDetail> _PolicyRequestDetails;
		
		private EntitySet<policiesonemployee> _policiesonemployees;
		
		private EntityRef<CompanyDetail> _CompanyDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpolicyidChanging(int value);
    partial void OnpolicyidChanged();
    partial void OnpolicynameChanging(string value);
    partial void OnpolicynameChanged();
    partial void OnpolicydesChanging(string value);
    partial void OnpolicydesChanged();
    partial void OnamountChanging(System.Nullable<decimal> value);
    partial void OnamountChanged();
    partial void OnEmiChanging(System.Nullable<decimal> value);
    partial void OnEmiChanged();
    partial void OncompanyIdChanging(System.Nullable<int> value);
    partial void OncompanyIdChanged();
    #endregion
		
		public policy()
		{
			this._PolicyRequestDetails = new EntitySet<PolicyRequestDetail>(new Action<PolicyRequestDetail>(this.attach_PolicyRequestDetails), new Action<PolicyRequestDetail>(this.detach_PolicyRequestDetails));
			this._policiesonemployees = new EntitySet<policiesonemployee>(new Action<policiesonemployee>(this.attach_policiesonemployees), new Action<policiesonemployee>(this.detach_policiesonemployees));
			this._CompanyDetail = default(EntityRef<CompanyDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_policyid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int policyid
		{
			get
			{
				return this._policyid;
			}
			set
			{
				if ((this._policyid != value))
				{
					this.OnpolicyidChanging(value);
					this.SendPropertyChanging();
					this._policyid = value;
					this.SendPropertyChanged("policyid");
					this.OnpolicyidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_policyname", DbType="VarChar(50)")]
		public string policyname
		{
			get
			{
				return this._policyname;
			}
			set
			{
				if ((this._policyname != value))
				{
					this.OnpolicynameChanging(value);
					this.SendPropertyChanging();
					this._policyname = value;
					this.SendPropertyChanged("policyname");
					this.OnpolicynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_policydes", DbType="VarChar(150)")]
		public string policydes
		{
			get
			{
				return this._policydes;
			}
			set
			{
				if ((this._policydes != value))
				{
					this.OnpolicydesChanging(value);
					this.SendPropertyChanging();
					this._policydes = value;
					this.SendPropertyChanged("policydes");
					this.OnpolicydesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Money")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emi", DbType="Money")]
		public System.Nullable<decimal> Emi
		{
			get
			{
				return this._Emi;
			}
			set
			{
				if ((this._Emi != value))
				{
					this.OnEmiChanging(value);
					this.SendPropertyChanging();
					this._Emi = value;
					this.SendPropertyChanged("Emi");
					this.OnEmiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyId", DbType="Int")]
		public System.Nullable<int> companyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._CompanyDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("companyId");
					this.OncompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="policy_PolicyRequestDetail", Storage="_PolicyRequestDetails", ThisKey="policyid", OtherKey="PolycyId")]
		public EntitySet<PolicyRequestDetail> PolicyRequestDetails
		{
			get
			{
				return this._PolicyRequestDetails;
			}
			set
			{
				this._PolicyRequestDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="policy_policiesonemployee", Storage="_policiesonemployees", ThisKey="policyid", OtherKey="policyid")]
		public EntitySet<policiesonemployee> policiesonemployees
		{
			get
			{
				return this._policiesonemployees;
			}
			set
			{
				this._policiesonemployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyDetail_policy", Storage="_CompanyDetail", ThisKey="companyId", OtherKey="CompanyId", IsForeignKey=true)]
		public CompanyDetail CompanyDetail
		{
			get
			{
				return this._CompanyDetail.Entity;
			}
			set
			{
				CompanyDetail previousValue = this._CompanyDetail.Entity;
				if (((previousValue != value) 
							|| (this._CompanyDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompanyDetail.Entity = null;
						previousValue.policies.Remove(this);
					}
					this._CompanyDetail.Entity = value;
					if ((value != null))
					{
						value.policies.Add(this);
						this._companyId = value.CompanyId;
					}
					else
					{
						this._companyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CompanyDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PolicyRequestDetails(PolicyRequestDetail entity)
		{
			this.SendPropertyChanging();
			entity.policy = this;
		}
		
		private void detach_PolicyRequestDetails(PolicyRequestDetail entity)
		{
			this.SendPropertyChanging();
			entity.policy = null;
		}
		
		private void attach_policiesonemployees(policiesonemployee entity)
		{
			this.SendPropertyChanging();
			entity.policy = this;
		}
		
		private void detach_policiesonemployees(policiesonemployee entity)
		{
			this.SendPropertyChanging();
			entity.policy = null;
		}
	}
}
#pragma warning restore 1591
